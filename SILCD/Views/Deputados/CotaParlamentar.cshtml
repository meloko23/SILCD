@model IEnumerable<SILCD.Models.CotaParlamentarViewModels>
@using SILCD.Models;
@using SILCD.Util;
@using GridMvc.Html;

@{
    ViewBag.Title = "Cota Parlamentar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    .modal-dialog {
        width: 1024px;
    }
</style>

<div class="page-header">
    <h2>
        Cota Parlamentar
        <small>@Constantes.TITULO_SISTEMA.ToString()</small>
    </h2>
</div>

@using (Html.BeginForm("CotaParlamentar", "Deputados", FormMethod.Post, new { @id = "form", @name = "form", @role = "form" })) {
    <div class="bs-callout bs-callout-info">
        <h4>Analítico</h4>
        <a href="@Url.Action("Detalhe/"+Model.First().ideCadastro.ToString())" class="btn btn-primary">
            <span class="glyphicon glyphicon-user"></span>
            Deputado
        </a>
        <button class="btn btn-primary" data-toggle="modal" data-target=".bs-example-modal-lg1"><span class="glyphicon glyphicon-th"></span> Agrupar por Refererência</button>
        <button class="btn btn-primary" data-toggle="modal" data-target=".bs-example-modal-lg2"><span class="glyphicon glyphicon-th-large"></span> Agrupar por Tipo</button>
        <button class="btn btn-primary" data-toggle="modal" data-target=".bs-example-modal-lg3"><span class="glyphicon glyphicon-signal"></span> Agrupar por Tipo (Gráfico)</button>
    </div>
    @Html.Grid(Model).Columns(columns => {
    columns.Add(c => c.Id).Titled("Id").Sortable(true).Filterable(true);
    columns.Add(c => c.txNomeParlamentar).Titled("Nome Parlamentar").Sortable(true).Filterable(true);
    columns.Add(c => c.datEmissao).Titled("Data Emissão").Sortable(true).Filterable(true).Format("{0:dd/MM/yyyy}");
    columns.Add(c => c.vlrDocumento).Titled("Vl. Doc.").Sortable(true).Filterable(true).Format("{0:C}");
    columns.Add(c => c.vlrGlosa).Titled("Vl. Glosa").Sortable(true).Filterable(true).Format("{0:C}");
    columns.Add(c => c.vlrLiquido).Titled("Vl. Líquido").Sortable(true).Filterable(true).Format("{0:C}");
    columns.Add()
    .Encoded(false)
    .Sanitized(false)
    .SetWidth(30)
    .RenderValueAs(c => c.numMes.ToString() + "/" + c.numAno.ToString()).Titled("Referência").Sortable(true).Filterable(true);
}).WithPaging(5).Filterable(true).Sortable(true);
}

<div class="modal fade bs-example-modal-lg1" tabindex="-1" role="dialog" aria-labelledby="modalCotaParlamentarPorReferenciaTipo" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="bs-callout bs-callout-info">
                <h4>Agrupado por Refererência</h4>
            </div>
            @using (Html.BeginForm("CotaParlamentar", "Deputados", FormMethod.Post, new { @id = "formPorReferenciaTipo", @name = "formPorReferenciaTipo", @role = "form" })) {
                @Html.Grid((IEnumerable<CotaParlamentarViewModels>)TempData["CotaParlamentarPorReferenciaTipo"]).Columns(columns => {
               columns.Add(c => c.numAno).Titled("Ano Ref.");
               columns.Add(c => c.numMes).Titled("Mês Ref.");
               columns.Add(c => c.txtDescricao).Titled("Descrição");
               columns.Add(c => c.vlrDocumento).Titled("Vl. Doc.").Format("{0:C}");
               columns.Add(c => c.vlrGlosa).Titled("Vl. Glosa").Format("{0:C}");
               columns.Add(c => c.vlrLiquido).Titled("Vl. Líquido").Format("{0:C}");
           }).WithPaging(100);
            }
        </div>
    </div>
</div>

<div class="modal fade bs-example-modal-lg2" tabindex="-1" role="dialog" aria-labelledby="modalCotaParlamentarPorTipo" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="bs-callout bs-callout-info">
                <h4>Agrupado por Tipo</h4>
            </div>
            @using (Html.BeginForm("CotaParlamentar", "Deputados", FormMethod.Post, new { @id = "formPorTipo", @name = "formPorTipo", @role = "form" })) {
                @Html.Grid((IEnumerable<CotaParlamentarViewModels>)TempData["CotaParlamentarPorTipo"]).Columns(columns => {
               columns.Add(c => c.txtDescricao).Titled("Descrição");
               columns.Add(c => c.vlrDocumento).Titled("Vl. Doc.").Format("{0:C}");
               columns.Add(c => c.vlrGlosa).Titled("Vl. Glosa").Format("{0:C}");
               columns.Add(c => c.vlrLiquido).Titled("Vl. Líquido").Format("{0:C}");
           }).WithPaging(100);
            }
        </div>
    </div>
</div>

<div class="modal fade bs-example-modal-lg3" tabindex="-1" role="dialog" aria-labelledby="modalCotaParlamentarPorReferenciaTipoGrafico" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="bs-callout bs-callout-info">
                <h4>Agrupado por Tipo</h4>
            </div>
        </div>
    </div>
</div>

@{
    var dadosGrafico = "['TIPO', 'VALOR DOCUMENTO'] , ";
    var Qtd = 0;
}
@foreach (var item in (IEnumerable<CotaParlamentarViewModels>)TempData["CotaParlamentarPorTipo"]) {
    Qtd++;
    dadosGrafico += "['" + item.txtDescricao + "', " + decimal.Round(item.vlrDocumento, 2, MidpointRounding.AwayFromZero).ToString().Replace(",", ".") + "]";
    if (Qtd < ((IEnumerable<CotaParlamentarViewModels>)TempData["CotaParlamentarPorTipo"]).Count()) {
        dadosGrafico += " ,";
    }
}

@{
    List<string[]> arrayDadosGraficos = new List<string[]>();
    arrayDadosGraficos.Add(new[] { "TIPO", "VALOR DOCUMENTO" });
    foreach (var item in (IEnumerable<CotaParlamentarViewModels>)TempData["CotaParlamentarPorTipo"]) {
        arrayDadosGraficos.Add(new[] { item.txtDescricao, decimal.Round(item.vlrDocumento, 2, MidpointRounding.AwayFromZero).ToString().Replace(",", ".") });
    }
}

<script type="text/javascript" src="https://www.google.com/jsapi"></script>
<script type="text/javascript">
    google.load("visualization", "1", { packages: ["corechart"] });
    google.setOnLoadCallback(drawChart);

    //function drawChart() {

    //    var jsonData = null;

    //    $.post('JsonResultBuscarCotaParlamentarPorTipo', {},
    //           function (data) { jsonData = data; },
    //           'json');

    //    var data2 = google.visualization.arrayToDataTable(jsonData);

    //    //var data2 = google.visualization.arrayToDataTable([
    //    //    arrayDadosGraficos
    //    //]);

    //    var options2 = {
    //        title: 'TIPO X VALOR DOCUMENTO',
    //        pieHole: 0.4,
    //    };

    //    var chart2 = new google.visualization.PieChart(document.getElementById('donutchartTIPO'));
    //    chart2.draw(data2, options2);
    //}

    function drawChart() {

        $.get('JsonResultBuscarCotaParlamentarPorTipo/@Model.ToList()[0].ideCadastro.ToString()', {},
        function (data) {
            var tdata = new google.visualization.DataTable();
            var rows = data.length;
            var cols = data[0].length;

            tdata.addColumn('string', data[0][0]);
            for (var i = 0; i < cols; i++) {
                tdata.addColumn('number', data[0][i]);
            }

            tdata.addRows(data.length);
            for (var i = 1; i < data.length; i++) {
                tdata.setCell(i, 0, data[i][0]);
                for (var j = 1; j < cols; j++) {
                    var value = parseInt(data[i][j]);
                    tdata.setCell(i, j, value);

                }
            }

            var options = {
                title: 'TIPO X VALOR DOCUMENTO',
                pieHole: 0.4,
            };

            var chart = new google.visualization.PieChart(document.getElementById('donutchartTIPO'));
            chart.draw(tdata, options);
        });
    }
</script>
<div id="donutchartTIPO" style="width: 900px; height: 500px;"></div>
